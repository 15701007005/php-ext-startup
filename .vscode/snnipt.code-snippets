{
    // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
        "itf": {
            "prefix": "ift",
            "scope": "php",
            "body": [
              "it('test $1', function () {",
              "    $0",
              "});"
            ],
            "description": "it function scope"
        },
        "cuf": {
            "prefix": "cuf",
            "scope": "c,h",
            "body": [
                "zval func = {};",
                "ZVAL_STRING(&func, \"$1\");",
                "call_user_function(NULL, NULL, &func, ${2:return_value}, 0, NULL);"
            ],
            "description": "args"
        },
        "cufa": {
            "prefix": "cufa",
            "scope": "c,h",
            "body": [
                "zval ${1:func}, args[] = {",
                "    $4",
                "};",
                "ZVAL_STRING(&${1:func}, \"$0\");",
                "call_user_function(NULL, NULL, &${1:func}, ${3:return_value}, $2, args);"
            ],
            "description": "args"
        },
        "argparse": {
            "prefix": "argparse",
            "scope": "c,h",
            "body": [
                "ZEND_PARSE_PARAMETERS_START($1, $2)",
                "    Z_PARAM_$0",
                "ZEND_PARSE_PARAMETERS_END();"
            ],
            "description": "args"
        },
        "argdefine": {
            "prefix": "argdefine",
            "scope": "c,h",
            "body": [
                "ZEND_BEGIN_ARG_INFO($1, $2)",
                "    ZEND_ARG_TYPE_$0",
                "ZEND_END_ARG_INFO();"
            ],
            "description": "args"
        }
}
